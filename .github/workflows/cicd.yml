name: DemoSlowUploads
# CI/CD Actions for GitHub to demonstrate how long it takes to upload a build-product

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SIZE: 20M
jobs:
  # # Create a large file and upload it to GitHub as a build product
  # demo_upload_from_container:
  #   runs-on: [self-hosted, docker]
  #   container:
  #     image: node:16
  #   strategy:
  #     matrix:
  #       size: [1M, 2M, 3M, 4M, 5M, 10M, 20M, 30M, 40M, 50M, 100M]
  #   steps:
  #     - name: Create Large File
  #       run: |
  #         mkdir /isolated_build/
  #         cd /isolated_build/
  #         # Use /dev/urandom because GitHub actions zips up the build product
  #         head -c ${{ matrix.size }} </dev/urandom >test.data
  #     - name: Upload Large File
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "${{ github.job }}"
  #         retention-days: 7
  #         path: /isolated_build/test.data

  # demo_upload_without_container:
  #   runs-on: [self-hosted, docker]
  #   strategy:
  #     matrix:
  #       size: [1M, 2M, 3M, 4M, 5M, 10M, 20M, 30M, 40M, 50M, 100M]
  #   steps:
  #     - name: Create Large File
  #       run: |
  #         # Use /dev/urandom because GitHub actions zips up the build product
  #         head -c ${{ matrix.size }} </dev/urandom >test.data
  #     - name: Upload Large File
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "${{ github.job }}"
  #         retention-days: 7
  #         path: test.data

  # # Download all build products
  # demo_download: 
  #   runs-on: [self-hosted, docker]
  #   needs: [demo_upload_from_container, demo_upload_without_container]
  #   container:
  #     image: node:16
  #   steps:
  #     - name: Download all build products
  #       uses: actions/download-artifact@v3
  #     - name: Show files
  #       run: ls -laR



  demo_cache_upload_from_container:
    runs-on: [self-hosted, docker]
    container:
      image: node:16
    strategy:
      matrix:
        # size: [1M, 2M, 3M, 4M, 5M, 10M, 20M, 30M, 40M, 50M, 100M]
        size: [10M]
    steps:
      - name: Create Large File
        run: |
          mkdir /isolated_build/
          cd /isolated_build/
          # Use /dev/urandom because GitHub actions zips up the build product
          head -c ${{ matrix.size }} </dev/urandom >test.data
      - name: Cache the file
        uses: actions/cache@v3
        with:
          key: ${{ github.sha }}-${{ matrix.size}}-test.data
          path: test.data


  demo_cache_download_into_container:
    runs-on: [self-hosted, docker]
    strategy:
      matrix:
        # size: [1M, 2M, 3M, 4M, 5M, 10M, 20M, 30M, 40M, 50M, 100M]
        size: [10M]
    container:
      image: node:16
    steps:
      - run: mkdir -p /isolated/
      - name: Download cached files
        uses: actions/cache@v3
        with:
            path: /isolated/test
            key: ${{ github.sha }}-${{ matrix.size}}-test.data
      - name: Show files is /isolated/
        run: ls -laR /isolated/
      - name: Show files is current folder
        run: ls -laR .
    